openapi: 3.0.3
info:
  title: GB-SOS API
  version: "1.1"
  description: |-
    ## GB-SOS

    Client-server application for controlling vacuum cleaners.
    Authentication added for authorized requests to API.
  contact:
    email: sobaka_internet@internet.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: About project
  url: ./README.md
servers:
  - url: http://localhost:8080/api/v1.0/
    description: application server
  - url: http://localhost:8080/api/v1.0/
    description: authorization server
tags:
  - name: robot
    description: access to an robot
  - name: schedule
    description: access to an schedule
  - name: user
    description: access to an user
paths:
  /robot:
    post:
      tags:
        - robot
      description: Add new robot
      operationId: createRobot
      parameters:
        - name: api_key
          in: header
          description: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/robot"
        required: true
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    get:
      tags:
        - robot
      description: Get a array of robots
      operationId: readRobots
      parameters:
        - name: api_key
          in: header
          description: token
          required: true
          schema:
            type: string
        - name: group
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/robot"
        "204":
          description: No content
        "401":
          description: Unauthorized
  /robot/{robotId}:
    delete:
      tags:
        - robot
      operationId: delRobot
      parameters:
        - name: api_key
          in: header
          description: token
          required: true
          schema:
            type: string
        - name: robotId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /schedule:
    get:
      tags:
        - schedule
      description: Get a array of tasks
      operationId: readSchedules
      parameters:
        - name: api_key
          in: header
          description: token
          required: true
          schema:
            type: string
        - name: userId
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/schedule"
        "204":
          description: No content
        "302":
          description: Not modified
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    put:
      tags:
        - schedule
      description: Update task
      operationId: updateSchedule
      parameters:
        - name: api_key
          in: header
          description: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/schedule"
        required: true
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      tags:
        - schedule
      description: Add new task in the schedule
      operationId: addSchedulle
      parameters:
        - name: api_key
          in: header
          description: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/schedule"
        required: true
      responses:
        "201":
          description: Created
        "304":
          description: Not modified
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    delete:
      tags:
        - schedule
      description: delete a task in schedule
      operationId: delSchedule
      parameters:
        - name: api_key
          in: header
          description: token
          required: true
          schema:
            type: string
        - name: robotId
          in: query
          required: true
          schema:
            type: integer
        - name: startAt
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /user/login:
    get:
      tags:
        - user
      operationId: login
      parameters:
        - name: phone
          in: query
          required: true
          schema:
            type: string
            format: binary
        - name: passwd
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Forbidden
  /user/logout:
    get:
      tags:
        - user
      operationId: logout
      parameters: []
      responses:
        default:
          description: Success operation
components:
  schemas:
    schedule:
      type: object
      required:
        - robot
        - startAt
        - mode
        - areas
      properties:
          robot:
            type: integer
          startAt:
            type: string
            format: date-time
          mode:
            type: string
          areas:
            type: string
            format: binary
    robot:
      type: object
      required:
        - serialNuber
        - version
        - name
        - lastStart
        - resource
        - ip
        - group
      properties:
        serialNumber:
          type: string
        version:
          type: string
          format: binary
        name:
          type: string
        lastStart:
          type: string
          format: date-time
        ip:
          type: string
          format: binary
        areas:
          type: string
          format: binary
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header